{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","this","children","Component","ErrorBoundary","state","hasError","error","info","setState","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAZF,SAACC,GACV,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,YAA8CC,IAAI,WAC1D,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCeXC,EArBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BACKA,EAAOC,KAAI,SAACC,EAAMC,GACf,OACI,cAAC,EAAD,CAEIR,GAAIO,EAAKP,GACTE,KAAMK,EAAKL,KACXC,MAAOI,EAAKJ,OAHPK,SCKdC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKb,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCPLI,E,uKAGb,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKC,KAAKvB,MAAMwB,e,GALQC,aCAfC,E,kDACjB,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IACD2B,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBP,KAAKQ,SAAS,CAACH,UAAU,M,+BAIzB,OAAGL,KAAKI,MAAMC,SACH,yDAEAL,KAAKvB,MAAMwB,a,GAhBaC,aCiD5BO,G,wDA1CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKH,SAAS,CAAClB,YAAaqB,EAAMC,OAAOC,SAbzC,EAAKT,MAAQ,CACTnB,OAAQ,GACRK,YAAa,IAJP,E,gEAQO,IAAD,OAChBwB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAEvB,OAAQiC,S,+BAOjC,IAAD,EAE2BlB,KAAKI,MAA7BnB,EAFH,EAEGA,OAAQK,EAFX,EAEWA,YACV6B,EAAelC,EAAOmC,QAAO,SAAAC,GAC/B,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASjC,EAAYgC,kBAGzD,OAAQrC,EAAOuC,OAGP,sBAAK9C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAcS,KAAKU,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQkC,WAPlC,6C,GA5BMjB,cCKHuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.75f64d1c.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Card = (props) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img src={`https://robohash.org/${props.id}?200x200`} alt=\"robots\"/>\n            <div>\n                <h2>{props.name}</h2>\n                <p>{props.email}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\n    return (\n        <div>                     \n            {robots.map((user, i) => {\n                return (\n                    <Card \n                        key={i} \n                        id={user.id} \n                        name={user.name} \n                        email={user.email}\n                    />\n                   )\n                }\n            )\n        }\n\n        </div>\n    );\n};\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className=\"pa2\">\n            <input\n                className=\"pa3 ba b--green bg-lightest-blue\" \n                type=\"search\"\n                placeholder=\"Search robots\"\n                onChange={searchChange}\n            />\n        </div>\n    );\n};\n\nexport default SearchBox;","import React, { Component } from 'react';\n\nexport default class Scroll extends Component {\n\n    render() {        \n        return (\n            <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n                {this.props.children}\n            </div>\n        );\n    };\n\n};","import React, { Component } from 'react';\n\nexport default class ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    };\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true});\n    }\n\n    render() {        \n        if(this.state.hasError) {\n            return <h1>Ooops. That is not good</h1>\n        } else {\n            return this.props.children;\n        }       \n    }\n\n};","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\nclass App extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        };\n    };\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then(response => response.json())        \n        .then(users => this.setState({ robots: users }))                    \n    };\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value});        \n    };\n\n    render() {\n\n        const { robots, searchfield } = this.state;\n        const filterRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        });\n\n        return !robots.length ? \n            <h1>Loading</h1> :          \n            (\n                <div className=\"tc\">\n                    <h1 className=\"f1\">RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filterRobots} />\n                        </ErrorBoundary>                            \n                    </Scroll>\n                </div>            \n            );\n    };\n        \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}